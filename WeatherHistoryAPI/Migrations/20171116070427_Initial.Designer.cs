// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WeatherHistoryAPI.Data;

namespace WeatherHistoryAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20171116070427_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApplicationCore.Models.WeatherDataEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CityId");

                    b.Property<string>("CityName");

                    b.Property<int>("Cloudiness");

                    b.Property<int>("Humidity");

                    b.Property<string>("MainWeather");

                    b.Property<double>("MaxTemperature");

                    b.Property<DateTime>("MeasurementDate");

                    b.Property<double>("MinTemperature");

                    b.Property<int>("Pressure");

                    b.Property<int?>("RainVolume");

                    b.Property<int?>("SnowVolume");

                    b.Property<DateTime>("Sunrise");

                    b.Property<DateTime>("Sunset");

                    b.Property<double>("Temperature");

                    b.Property<string>("WeatherDescription");

                    b.Property<double>("WindSpeed");

                    b.HasKey("Id");

                    b.ToTable("WeatherDataEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
